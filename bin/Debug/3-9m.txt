Welcome to OurScheme!

> a defined

> "=============== Problem 9 viewable case ================="

> environment cleaned

> x1 defined

> x2 defined

> x3 defined

> 7

> 3

> 4

> Transform defined

> x1 defined

> x2 defined

> 13

> 12

> 5

> SumUp defined

> 45

> "Illegal input! the first argument must be smaller or equal to the second."

> 5

> 30

> SumUp defined

> 55.500

> "Illegal input! the first argument must be smaller or equal to the second."

> 3.500

> 387.000

> 30

> environment cleaned

> x1 defined

> x2 defined

> x3 defined

> 7

> 3

> 4

> Transform defined

> ERROR (no return value) : ( Transform
  3
  30
  20
)

> x1 defined

> x2 defined

> x2 defined

> ERROR (unbound parameter) : ( Transform
  3
  30
  20
)

> 54

> 4

> 5

> SumUp defined

> 45

> ERROR (unbound parameter) : ( Transform
  start
  end
  start
)

> "Illegal input! the first argument must be smaller or equal to the second."

> 5

> "Illegal input! the first argument must be smaller or equal to the second."

> "Illegal input! the first argument must be smaller or equal to the second."

> ERROR (unbound parameter) : ( Transform
  3
  ( Transform
    -3
    x1
    x3
  )
  x3
)

> "Illegal input! the first argument must be smaller or equal to the second."

> 63

> SumUp defined

> 55.500

> "Illegal input! the first argument must be smaller or equal to the second."

> 3.500

> ERROR (unbound parameter) : ( Transform
  start
  end
  start
)

> ERROR (= with incorrect argument type) : "Illegal input! the first argument must be smaller or equal to the second."

> 63

> ERROR (DEFINE format) : ( define
  ( atom?
    exp
  )
  ( not
    ( pair?
      exp
    )
  )
)

> #t

> nil

> ERROR (attempt to apply non-function) : 1

> #t

> ERROR (unbound symbol) : append

> append defined

> ( 1
  2
  3
  4
  5
)

> ( 10
  ( ( 20
      30
    )
    40
  )
  ( 50
    ( 60
    )
  )
  ( 70
    ( 80
      90
    )
  )
)

> ( 1
  2
  3
  4
  ( 5
  )
  6
  7
  8
)

> ( 1
  2
  "invalid argument"
  3
  ( 4
    5
  )
)

> ( 1
  "invalid argument"
  2
  ( 3
    4
  )
)

> ERROR (DEFINE format) : ( define
  ( list?
    exp
  )
  ( cond
    ( ( null?
        exp
      )
      #t
    )
    ( ( atom?
        exp
      )
      nil
    )
    ( #t
      ( list?
        ( cdr
          exp
        )
      )
    )
  )
)

> #t

> nil

> #t

> #t

> #t

> append1 defined

> "invalid argument"

> "invalid argument"

> #t

> nil

> ( 10
  ( ( 20
      30
    )
    40
  )
  ( 50
    ( 60
    )
  )
  ( 70
    ( 80
      90
    )
  )
)

> ERROR (incorrect number of arguments) : append1

> ERROR (attempt to apply non-function) : "What"

> reverse defined

> ( 4
  3
  2
  1
)

> ( "Hi"
  13
)

> ERROR (unbound symbol) : a

> ERROR (unbound symbol) : a

> ERROR (car with incorrect argument type) : a

> a

> ( ( 70
    ( 80
      90
    )
  )
  ( 50
    ( 60
    )
  )
  ( ( 20
      30
    )
    40
  )
  10
)

> pairing defined

> ( ( 1
    1
  )
  ( 2
    2
  )
  ( 3
    3
  )
  ( 4
    4
  )
)

> ( ( 4
    4
  )
  ( 3
    3
  )
  ( 2
    2
  )
  ( 1
    1
  )
)

> AllAdd defined

> ( 6
  7
  8
  9
)

> ( -5
  -4
  -3
  -2
)

> ERROR (unbound parameter) : ( Transform
  3
  30
  20
)

> ERROR (+ with incorrect argument type) : add

> ERROR (+ with incorrect argument type) : "Hi"

> ERROR (incorrect number of arguments) : car

> ERROR (car with incorrect argument type) : 1

> 
Thanks for using OurScheme!